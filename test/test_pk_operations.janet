(use ../build/botan)
(use spork/test)

(start-suite "Public Key Operations")

(let [prikey (privkey/new "RSA" "1024")
      prikey1 (privkey/new "ECDH" "secp256r1")
      prikey2 (privkey/new "ECDH" "secp256r1")
      pubkey (:get-pubkey prikey)
      pubkey1 (:get-pubkey prikey1)
      pubkey2 (:get-pubkey prikey2)
      pk-enc (pk-encrypt/new pubkey "OAEP(SHA-256)")
      pk-dec (pk-decrypt/new prikey "OAEP(SHA-256)")
      pk-sig (pk-sign/new prikey "PKCS1v15(SHA-256)")
      pk-veri (pk-verify/new pubkey "PKCS1v15(SHA-256)")
      pk-ka1 (pk-key-agreement/new prikey1 "KDF2(SHA-256)")
      pk-ka2 (pk-key-agreement/new prikey2 "KDF2(SHA-256)")
      plain "plaintext"
      encrypted (:encrypt pk-enc plain)
      decrypted (:decrypt pk-dec encrypted)
      signature (:finish (:update pk-sig plain))
      salt (:get (rng/new) 64)]
  (assert (= plain decrypted))
  (assert (:finish (:update pk-veri plain) signature))
  (assert (= (:public-value pk-ka1)
             (:get-public-point (:get-pubkey prikey1))))
  (assert (= (:agree pk-ka1 (:get-public-point pubkey2) salt)
             (:agree pk-ka2 (:get-public-point pubkey1) salt)))
  (assert (= (:agree pk-ka1 (:get-public-point pubkey2) salt 64)
             (:agree pk-ka2 (:get-public-point pubkey1) salt 64)))
  (assert (= (:agree pk-ka1 (:get-public-point pubkey2) salt 128)
             (:agree pk-ka2 (:get-public-point pubkey1) salt 128))))

(end-suite)
